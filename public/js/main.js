!function(){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var t,i=function(){return i=Object.assign||function(t){for(var i,n=1,e=arguments.length;n<e;n++)for(var o in i=arguments[n])Object.prototype.hasOwnProperty.call(i,o)&&(t[o]=i[o]);return t},i.apply(this,arguments)},n=function(){function t(t){this.options=t,this.listeners={}}return t.prototype.on=function(t,i){var n=this.listeners[t]||[];this.listeners[t]=n.concat([i])},t.prototype.triggerEvent=function(t,i){var n=this;(this.listeners[t]||[]).forEach((function(t){return t({target:n,event:i})}))},t}();!function(t){t[t.Add=0]="Add",t[t.Remove=1]="Remove"}(t||(t={}));var e,o=function(){function i(){this.notifications=[]}return i.prototype.push=function(i){this.notifications.push(i),this.updateFn(i,t.Add,this.notifications)},i.prototype.splice=function(i,n){var e=this.notifications.splice(i,n)[0];return this.updateFn(e,t.Remove,this.notifications),e},i.prototype.indexOf=function(t){return this.notifications.indexOf(t)},i.prototype.onUpdate=function(t){this.updateFn=t},i}();!function(t){t.Dismiss="dismiss",t.Click="click"}(e||(e={}));var s={types:[{type:"success",className:"notyf__toast--success",backgroundColor:"#3dc763",icon:{className:"notyf__icon--success",tagName:"i"}},{type:"error",className:"notyf__toast--error",backgroundColor:"#ed3d3d",icon:{className:"notyf__icon--error",tagName:"i"}}],duration:2e3,ripple:!0,position:{x:"right",y:"bottom"},dismissible:!1},a=function(){function n(){this.notifications=[],this.events={},this.X_POSITION_FLEX_MAP={left:"flex-start",center:"center",right:"flex-end"},this.Y_POSITION_FLEX_MAP={top:"flex-start",center:"center",bottom:"flex-end"};var t=document.createDocumentFragment(),i=this._createHTMLElement({tagName:"div",className:"notyf"});t.appendChild(i),document.body.appendChild(t),this.container=i,this.animationEndEventName=this._getAnimationEndEventName(),this._createA11yContainer()}return n.prototype.on=function(t,n){var e;this.events=i(i({},this.events),((e={})[t]=n,e))},n.prototype.update=function(i,n){n===t.Add?this.addNotification(i):n===t.Remove&&this.removeNotification(i)},n.prototype.removeNotification=function(t){var i,n,e=this,o=this._popRenderedNotification(t);o&&((i=o.node).classList.add("notyf__toast--disappear"),i.addEventListener(this.animationEndEventName,n=function(t){t.target===i&&(i.removeEventListener(e.animationEndEventName,n),e.container.removeChild(i))}))},n.prototype.addNotification=function(t){var i=this._renderNotification(t);this.notifications.push({notification:t,node:i}),this._announce(t.options.message||"Notification")},n.prototype._renderNotification=function(t){var i,n=this._buildNotificationCard(t),e=t.options.className;return e&&(i=n.classList).add.apply(i,e.split(" ")),this.container.appendChild(n),n},n.prototype._popRenderedNotification=function(t){for(var i=-1,n=0;n<this.notifications.length&&i<0;n++)this.notifications[n].notification===t&&(i=n);if(-1!==i)return this.notifications.splice(i,1)[0]},n.prototype.getXPosition=function(t){var i;return(null===(i=null==t?void 0:t.position)||void 0===i?void 0:i.x)||"right"},n.prototype.getYPosition=function(t){var i;return(null===(i=null==t?void 0:t.position)||void 0===i?void 0:i.y)||"bottom"},n.prototype.adjustContainerAlignment=function(t){var i=this.X_POSITION_FLEX_MAP[this.getXPosition(t)],n=this.Y_POSITION_FLEX_MAP[this.getYPosition(t)],e=this.container.style;e.setProperty("justify-content",n),e.setProperty("align-items",i)},n.prototype._buildNotificationCard=function(t){var i=this,n=t.options,o=n.icon;this.adjustContainerAlignment(n);var s=this._createHTMLElement({tagName:"div",className:"notyf__toast"}),a=this._createHTMLElement({tagName:"div",className:"notyf__ripple"}),r=this._createHTMLElement({tagName:"div",className:"notyf__wrapper"}),c=this._createHTMLElement({tagName:"div",className:"notyf__message"});c.innerHTML=n.message||"";var p=n.background||n.backgroundColor;if(o){var u=this._createHTMLElement({tagName:"div",className:"notyf__icon"});if(("string"==typeof o||o instanceof String)&&(u.innerHTML=new String(o).valueOf()),"object"==typeof o){var l=o.tagName,d=void 0===l?"i":l,f=o.className,h=o.text,m=o.color,v=void 0===m?p:m,y=this._createHTMLElement({tagName:d,className:f,text:h});v&&(y.style.color=v),u.appendChild(y)}r.appendChild(u)}if(r.appendChild(c),s.appendChild(r),p&&(n.ripple?(a.style.background=p,s.appendChild(a)):s.style.background=p),n.dismissible){var _=this._createHTMLElement({tagName:"div",className:"notyf__dismiss"}),g=this._createHTMLElement({tagName:"button",className:"notyf__dismiss-btn"});_.appendChild(g),r.appendChild(_),s.classList.add("notyf__toast--dismissible"),g.addEventListener("click",(function(n){var o,s;null===(s=(o=i.events)[e.Dismiss])||void 0===s||s.call(o,{target:t,event:n}),n.stopPropagation()}))}s.addEventListener("click",(function(n){var o,s;return null===(s=(o=i.events)[e.Click])||void 0===s?void 0:s.call(o,{target:t,event:n})}));var N="top"===this.getYPosition(n)?"upper":"lower";return s.classList.add("notyf__toast--"+N),s},n.prototype._createHTMLElement=function(t){var i=t.tagName,n=t.className,e=t.text,o=document.createElement(i);return n&&(o.className=n),o.textContent=e||null,o},n.prototype._createA11yContainer=function(){var t=this._createHTMLElement({tagName:"div",className:"notyf-announcer"});t.setAttribute("aria-atomic","true"),t.setAttribute("aria-live","polite"),t.style.border="0",t.style.clip="rect(0 0 0 0)",t.style.height="1px",t.style.margin="-1px",t.style.overflow="hidden",t.style.padding="0",t.style.position="absolute",t.style.width="1px",t.style.outline="0",document.body.appendChild(t),this.a11yContainer=t},n.prototype._announce=function(t){var i=this;this.a11yContainer.textContent="",setTimeout((function(){i.a11yContainer.textContent=t}),100)},n.prototype._getAnimationEndEventName=function(){var t,i=document.createElement("_fake"),n={MozTransition:"animationend",OTransition:"oAnimationEnd",WebkitTransition:"webkitAnimationEnd",transition:"animationend"};for(t in n)if(void 0!==i.style[t])return n[t];return"animationend"},n}(),r=function(){function t(t){var n=this;this.dismiss=this._removeNotification,this.notifications=new o,this.view=new a;var r=this.registerTypes(t);this.options=i(i({},s),t),this.options.types=r,this.notifications.onUpdate((function(t,i){return n.view.update(t,i)})),this.view.on(e.Dismiss,(function(t){var i=t.target,o=t.event;n._removeNotification(i),i.triggerEvent(e.Dismiss,o)})),this.view.on(e.Click,(function(t){var i=t.target,n=t.event;return i.triggerEvent(e.Click,n)}))}return t.prototype.error=function(t){var i=this.normalizeOptions("error",t);return this.open(i)},t.prototype.success=function(t){var i=this.normalizeOptions("success",t);return this.open(i)},t.prototype.open=function(t){var e=this.options.types.find((function(i){return i.type===t.type}))||{},o=i(i({},e),t);this.assignProps(["ripple","position","dismissible"],o);var s=new n(o);return this._pushNotification(s),s},t.prototype.dismissAll=function(){for(;this.notifications.splice(0,1););},t.prototype.assignProps=function(t,i){var n=this;t.forEach((function(t){i[t]=null==i[t]?n.options[t]:i[t]}))},t.prototype._pushNotification=function(t){var i=this;this.notifications.push(t);var n=void 0!==t.options.duration?t.options.duration:this.options.duration;n&&setTimeout((function(){return i._removeNotification(t)}),n)},t.prototype._removeNotification=function(t){var i=this.notifications.indexOf(t);-1!==i&&this.notifications.splice(i,1)},t.prototype.normalizeOptions=function(t,n){var e={type:t};return"string"==typeof n?e.message=n:"object"==typeof n&&(e=i(i({},e),n)),e},t.prototype.registerTypes=function(t){var n=(t&&t.types||[]).slice();return s.types.map((function(t){var e=-1;n.forEach((function(i,n){i.type===t.type&&(e=n)}));var o=-1!==e?n.splice(e,1)[0]:{};return i(i({},t),o)})).concat(n)},t}();!function(){const t=new r;(async()=>{await(t=>{if("number"!=typeof t&&t<0)throw new Error("ms must be number!");return new Promise((i=>setTimeout(i,t)))})(300),t.error("Please fill out the form")})()}()}();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,